{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\Github\\\\New-Website\\\\fe\\\\src\\\\component\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport axiosInstance from \"../../helper/axios\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axiosInstance.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axiosInstance.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n\n    try {\n      await axiosInstance.put(`/posts/${post._id}`, {\n        username: user.username,\n        title: title,\n        desc: desc\n      });\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\" // src=\"https://images.pexels.com/photos/6685428/pexels-photo-6685428.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n        ,\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-pen-to-square\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-trash-can\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"e+pfhbmVNAJGgAXvDxuNkjsCBds=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["E:/Programming/Github/New-Website/fe/src/component/singlePost/SinglePost.jsx"],"names":["useContext","useEffect","useState","useLocation","Link","Context","axiosInstance","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","console","log","handleUpdate","e","preventDefault","put","reload","photo","target","value","Date","createdAt","toDateString"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMY,EAAE,GAAG,+BAAX;AAEA,QAAM;AAACC,IAAAA;AAAD,MAASf,UAAU,CAACK,OAAD,CAAzB;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AAGAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMqB,OAAO,GAAG,YAAU;AACtB,YAAMC,GAAG,GAAG,MAAMjB,aAAa,CAACkB,GAAd,CAAkB,YAAYf,IAA9B,CAAlB;AACAI,MAAAA,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;AACAR,MAAAA,QAAQ,CAACM,GAAG,CAACE,IAAJ,CAAST,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAJ,CAASP,IAAV,CAAP;AACH,KALD;;AAMAI,IAAAA,OAAO;AACV,GARQ,EAQN,CAACb,IAAD,CARM,CAAT;;AAUA,QAAMiB,YAAY,GAAG,YAAU;AAC3B,QAAG;AACC,YAAMpB,aAAa,CAACqB,MAAd,CAAsB,UAASf,IAAI,CAACgB,GAAI,EAAxC,EACF;AAACH,QAAAA,IAAI,EAAE;AAACI,UAAAA,QAAQ,EAAEd,IAAI,CAACc;AAAhB;AAAP,OADE,CAAN;AAEAC,MAAAA,MAAM,CAACtB,QAAP,CAAgBuB,OAAhB,CAAwB,GAAxB;AACH,KAJD,CAIC,OAAMC,GAAN,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GARD;;AAUA,QAAMG,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG;AACC,YAAM/B,aAAa,CAACgC,GAAd,CACD,UAAS1B,IAAI,CAACgB,GAAI,EADjB,EAEF;AAACC,QAAAA,QAAQ,EAAEd,IAAI,CAACc,QAAhB;AAA0Bb,QAAAA,KAAK,EAAEA,KAAjC;AAAwCE,QAAAA,IAAI,EAAEA;AAA9C,OAFE,CAAN;AAIAY,MAAAA,MAAM,CAACtB,QAAP,CAAgB+B,MAAhB;AACH,KAND,CAMC,OAAMP,GAAN,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBACCpB,IAAI,CAAC4B,KAAL,iBACG;AACI,QAAA,SAAS,EAAC,eADd,CAEI;AAFJ;AAGI,QAAA,GAAG,EAAE1B,EAAE,GAAGF,IAAI,CAAC4B,KAHnB;AAII,QAAA,GAAG,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cAFJ,EAUCpB,UAAU,gBAAK;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEJ,KAA1B;AAAiC,QAAA,SAAS,EAAC,sBAA3C;AAAkE,QAAA,SAAS,MAA3E;AAA4E,QAAA,QAAQ,EAAGoB,CAAD,IAAKnB,QAAQ,CAACmB,CAAC,CAACK,MAAF,CAASC,KAAV;AAAnG;AAAA;AAAA;AAAA;AAAA,cAAL,gBAEP;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACK9B,IAAI,CAACI,KADV,EAEKJ,IAAI,CAACiB,QAAL,MAAkBd,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEc,QAAxB,kBACG;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,0CAAb;AAAwD,YAAA,OAAO,EAAE,MAAIR,aAAa,CAAC,IAAD;AAAlF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,sCAAb;AAAoD,YAAA,OAAO,EAAEK;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAsBI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,6CAEI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASd,IAAI,CAACiB,QAAS,EAAlC;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,mCACI;AAAA,8BAAKjB,IAAI,CAACiB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,oBACK,IAAIc,IAAJ,CAAS/B,IAAI,CAACgC,SAAd,EAAyBC,YAAzB;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,EAiCKzB,UAAU,gBACX;AAAU,QAAA,SAAS,EAAC,qBAApB;AAA0C,QAAA,KAAK,EAAEF,IAAjD;AAAuD,QAAA,QAAQ,EAAGkB,CAAD,IAAKjB,OAAO,CAACiB,CAAC,CAACK,MAAF,CAASC,KAAV;AAA7E;AAAA;AAAA;AAAA;AAAA,cADW,gBAGP;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,kBAA+B9B,IAAI,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,cApCR,EAsCKE,UAAU,iBACP;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAEe,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;;GA5FuB5B,U;UACHJ,W;;;KADGI,U","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\"\r\nimport { Context } from \"../../context/Context\";\r\nimport axiosInstance from \"../../helper/axios\";\r\nimport \"./singlePost.css\"\r\n\r\nexport default function SinglePost(){\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [post, setPost] = useState({})\r\n\r\n    const PF = \"http://localhost:5000/images/\";\r\n\r\n    const {user} = useContext(Context)\r\n    const [title, setTitle] = useState(\"\")\r\n    const [desc, setDesc] = useState(\"\")\r\n    const [updateMode, setUpdateMode] = useState(false)\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPost = async ()=>{\r\n            const res = await axiosInstance.get(\"/posts/\" + path);\r\n            setPost(res.data);\r\n            setTitle(res.data.title);\r\n            setDesc(res.data.desc);\r\n        };\r\n        getPost();\r\n    }, [path])\r\n\r\n    const handleDelete = async() =>{\r\n        try{\r\n            await axiosInstance.delete(`/posts/${post._id}`, \r\n                {data: {username: user.username}});\r\n            window.location.replace(\"/\")\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    } \r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            await axiosInstance.put(\r\n                `/posts/${post._id}`,\r\n                {username: user.username, title: title, desc: desc}\r\n            );\r\n            window.location.reload();\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className='singlePost'>\r\n            <div className=\"singlePostWrapper\">\r\n            {post.photo && (\r\n                <img\r\n                    className=\"singlePostImg\"\r\n                    // src=\"https://images.pexels.com/photos/6685428/pexels-photo-6685428.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\r\n                    src={PF + post.photo}\r\n                    alt=\"\"\r\n                    />\r\n            )}\r\n            \r\n            {updateMode ? ( <input type=\"text\" value={title} className=\"singlePostTitleInput\" autoFocus onChange={(e)=>setTitle(e.target.value)}/>\r\n            ) : (\r\n                <h1 className=\"singlePostTitle\"> \r\n                    {post.title}\r\n                    {post.username === user?.username && (\r\n                        <div className=\"singlePostEdit\">\r\n                            <i className=\"singlePostIcon fa-solid fa-pen-to-square\" onClick={()=>setUpdateMode(true)}></i>\r\n                            <i className=\"singlePostIcon fa-solid fa-trash-can\" onClick={handleDelete}></i>\r\n                        </div>\r\n                    )}\r\n                </h1>\r\n            )}\r\n                <div className=\"singlePostInfo\">\r\n                    <span className=\"singlePostAuthor\">\r\n                        Author:\r\n                        <Link to={`/?user=${post.username}`} className=\"link\">\r\n                            <b> {post.username}</b>\r\n                        </Link>\r\n                    </span>\r\n                    <span className=\"singlePostDate\">\r\n                        {new Date(post.createdAt).toDateString()}\r\n                    </span>\r\n                </div>\r\n                {updateMode ? (\r\n                <textarea className=\"singlePostDescInput\" value={desc} onChange={(e)=>setDesc(e.target.value)}/>\r\n                ) : (\r\n                    <p className=\"singlePostDesc\">{post.desc}</p>  \r\n                )} \r\n                {updateMode && \r\n                    <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}